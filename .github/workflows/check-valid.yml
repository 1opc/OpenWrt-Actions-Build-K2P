name: Build OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.config'
#   schedule:
#     - cron: 0 4 * * 6 # 北京时间每周六中午12:00编译
  watch:
    types: started

env:
  REPO_URL: https://github.com/DreamWalkerXZ/lede
  REPO_BRANCH: main
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #sudo swapoff /swapfile
        #sudo rm -rf /swapfile
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: git clone $REPO_URL -b master openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./artifact
        ls openwrt/bin/targets/ramips/mt7621/
        mv openwrt/bin/targets/ramips/mt7621 ./artifact
        rm -rf ./artifact/packages
        name_tag="Phicomm-K2P-$(date +%Y-%m-%d)"
        echo ::set-output name=release_tag::$name_tag
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.assemble_artifact.outputs.release_tag }}
        path: artifact/*

    - name: Upload Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: true
        tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        files: artifact/*
